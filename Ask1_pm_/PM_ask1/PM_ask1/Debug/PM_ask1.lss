
PM_ask1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  00000254  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00802800  00802800  00000254  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000254  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000284  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000002c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002bc6  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000222f  00000000  00000000  00002eba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000395  00000000  00000000  000050e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000084  00000000  00000000  00005480  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001353  00000000  00000000  00005504  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000011c  00000000  00000000  00006857  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00006973  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 48 00 	jmp	0x90	; 0x90 <__ctors_end>
   4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  1c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__vector_9>
  28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  54:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  58:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  5c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  60:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  64:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  68:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  6c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  70:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  74:	0c 94 9a 00 	jmp	0x134	; 0x134 <__vector_29>
  78:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  7c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  80:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  84:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  88:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  8c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>

00000090 <__ctors_end>:
  90:	11 24       	eor	r1, r1
  92:	1f be       	out	0x3f, r1	; 63
  94:	cf ef       	ldi	r28, 0xFF	; 255
  96:	cd bf       	out	0x3d, r28	; 61
  98:	df e3       	ldi	r29, 0x3F	; 63
  9a:	de bf       	out	0x3e, r29	; 62

0000009c <__do_clear_bss>:
  9c:	28 e2       	ldi	r18, 0x28	; 40
  9e:	a0 e0       	ldi	r26, 0x00	; 0
  a0:	b8 e2       	ldi	r27, 0x28	; 40
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
  a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
  a6:	a4 30       	cpi	r26, 0x04	; 4
  a8:	b2 07       	cpc	r27, r18
  aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
  ac:	0e 94 5c 00 	call	0xb8	; 0xb8 <main>
  b0:	0c 94 ee 00 	jmp	0x1dc	; 0x1dc <_exit>

000000b4 <__bad_interrupt>:
  b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <main>:
int pezoi=0;

//_delay_ms(del);
int main(void) 
{
			PORTD.DIR |= 0b00000111; //PINs are output
  b8:	e0 e6       	ldi	r30, 0x60	; 96
  ba:	f4 e0       	ldi	r31, 0x04	; 4
  bc:	80 81       	ld	r24, Z
  be:	87 60       	ori	r24, 0x07	; 7
  c0:	80 83       	st	Z, r24
			PORTD.OUT |= 0b00000111; //LEDs are off
  c2:	84 81       	ldd	r24, Z+4	; 0x04
  c4:	87 60       	ori	r24, 0x07	; 7
  c6:	84 83       	std	Z+4, r24	; 0x04
			PORTD.OUTCLR= 0b00000100; //Car LED is on
  c8:	84 e0       	ldi	r24, 0x04	; 4
  ca:	86 83       	std	Z+6, r24	; 0x06
			PORTF.PIN5CTRL |= PORT_PULLUPEN_bm | PORT_ISC_BOTHEDGES_gc;
  cc:	e0 ea       	ldi	r30, 0xA0	; 160
  ce:	f4 e0       	ldi	r31, 0x04	; 4
  d0:	85 89       	ldd	r24, Z+21	; 0x15
  d2:	89 60       	ori	r24, 0x09	; 9
  d4:	85 8b       	std	Z+21, r24	; 0x15
			
//timerstuff:
			//Tram:
			TCA0.SPLIT.CTRLD = 1; //TCA_SPLIT_SPLITM_bm  0x01  /* Split Mode Enable bit mask. */
  d6:	e0 e0       	ldi	r30, 0x00	; 0
  d8:	fa e0       	ldi	r31, 0x0A	; 10
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	83 83       	std	Z+3, r24	; 0x03
			TCA0.SPLIT.LCNT = 0; //clear counter
  de:	10 a2       	std	Z+32, r1	; 0x20
			TCA0.SPLIT.LCMP0= ped; //T1
  e0:	98 e2       	ldi	r25, 0x28	; 40
  e2:	90 a7       	std	Z+40, r25	; 0x28
			TCA0.SPLIT.CTRLB=TCA_SPLIT_LCMP0EN_bm;
  e4:	81 83       	std	Z+1, r24	; 0x01
			//Pezoi:
			TCA0.SPLIT.HCNT = 0; //clear counter
  e6:	11 a2       	std	Z+33, r1	; 0x21
			TCA0.SPLIT.HCMP0= del; //T2,T3
  e8:	8a e0       	ldi	r24, 0x0A	; 10
  ea:	81 a7       	std	Z+41, r24	; 0x29
			TCA0.SPLIT.CTRLB=TCA_SPLIT_HCMP0EN_bm;
  ec:	90 e1       	ldi	r25, 0x10	; 16
  ee:	91 83       	std	Z+1, r25	; 0x01
			//Enable
			TCA0.SPLIT.CTRLA = 0x7<<1; //TCA_SPLIT_CLKSEL_DIV1024_gc = (0x07<<1)
  f0:	8e e0       	ldi	r24, 0x0E	; 14
  f2:	80 83       	st	Z, r24
			TCA0.SPLIT.CTRLA |=1;//Enable
  f4:	80 81       	ld	r24, Z
  f6:	81 60       	ori	r24, 0x01	; 1
  f8:	80 83       	st	Z, r24
			TCA0.SPLIT.INTCTRL = TCA_SPLIT_LCMP0_bm; //TCA_SPLIT_LCMP0_bm  0x10 /* Low Compare 0 Interrupt Enable bit mask. */
  fa:	92 87       	std	Z+10, r25	; 0x0a
													 //TCA_SPLIT_HCMP0EN_bm  0x10  /* High Compare 0 Enable bit mask. */

//timerstuff:
//					-------- Tram -------- 	
//while(1){tram=0}		
			sei(); //begin accepting interrupt signals
  fc:	78 94       	sei
			while (tram==0) 
  fe:	10 c0       	rjmp	.+32     	; 0x120 <__EEPROM_REGION_LENGTH__+0x20>
			{
				//					-------- Pezoi --------
				while (pezoi==0)
				{
					PORTD.OUTCLR= 0b00000100; //Car LED is on
 100:	84 e0       	ldi	r24, 0x04	; 4
 102:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <__TEXT_REGION_LENGTH__+0x7f4466>
//while(1){tram=0}		
			sei(); //begin accepting interrupt signals
			while (tram==0) 
			{
				//					-------- Pezoi --------
				while (pezoi==0)
 106:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
 10a:	90 91 01 28 	lds	r25, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 10e:	89 2b       	or	r24, r25
 110:	b9 f3       	breq	.-18     	; 0x100 <__EEPROM_REGION_LENGTH__>
				{
					PORTD.OUTCLR= 0b00000100; //Car LED is on
				}
				PORTD.OUT |= 0b00000101; //off
 112:	e0 e6       	ldi	r30, 0x60	; 96
 114:	f4 e0       	ldi	r31, 0x04	; 4
 116:	84 81       	ldd	r24, Z+4	; 0x04
 118:	85 60       	ori	r24, 0x05	; 5
 11a:	84 83       	std	Z+4, r24	; 0x04
				PORTD.OUTCLR= 0b00000100; //Car LED is on
 11c:	84 e0       	ldi	r24, 0x04	; 4
 11e:	86 83       	std	Z+6, r24	; 0x06

//timerstuff:
//					-------- Tram -------- 	
//while(1){tram=0}		
			sei(); //begin accepting interrupt signals
			while (tram==0) 
 120:	80 91 02 28 	lds	r24, 0x2802	; 0x802802 <tram>
 124:	90 91 03 28 	lds	r25, 0x2803	; 0x802803 <tram+0x1>
 128:	89 2b       	or	r24, r25
 12a:	69 f3       	breq	.-38     	; 0x106 <__EEPROM_REGION_LENGTH__+0x6>
					PORTD.OUTCLR= 0b00000100; //Car LED is on
				}
				PORTD.OUT |= 0b00000101; //off
				PORTD.OUTCLR= 0b00000100; //Car LED is on
			}			
			cli();
 12c:	f8 94       	cli
}
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	08 95       	ret

00000134 <__vector_29>:
		
ISR(PORTF_PORT_vect)
{
 134:	1f 92       	push	r1
 136:	0f 92       	push	r0
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	0f 92       	push	r0
 13c:	11 24       	eor	r1, r1
 13e:	8f 93       	push	r24
 140:	9f 93       	push	r25
 142:	ef 93       	push	r30
 144:	ff 93       	push	r31
	asm("break");
 146:	98 95       	break
	cli();
 148:	f8 94       	cli
	int y = PORTF.INTFLAGS;
 14a:	e0 ea       	ldi	r30, 0xA0	; 160
 14c:	f4 e0       	ldi	r31, 0x04	; 4
 14e:	81 85       	ldd	r24, Z+9	; 0x09
	PORTF.INTFLAGS=y;
 150:	81 87       	std	Z+9, r24	; 0x09
	PORTD.OUT |= 0b00000111; //LEDs are off
 152:	e0 e6       	ldi	r30, 0x60	; 96
 154:	f4 e0       	ldi	r31, 0x04	; 4
 156:	84 81       	ldd	r24, Z+4	; 0x04
 158:	87 60       	ori	r24, 0x07	; 7
 15a:	84 83       	std	Z+4, r24	; 0x04
	PORTD.OUTCLR= 0b00000001; //Pezoi LED is on
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	86 83       	std	Z+6, r24	; 0x06
	while(TCA0.SPLIT.HCMP0)
 160:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
 164:	81 11       	cpse	r24, r1
 166:	fc cf       	rjmp	.-8      	; 0x160 <__vector_29+0x2c>
	{		
	}
	pezoi=1;
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
 170:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
	sei();
 174:	78 94       	sei
}
 176:	ff 91       	pop	r31
 178:	ef 91       	pop	r30
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	0f 90       	pop	r0
 180:	0f be       	out	0x3f, r0	; 63
 182:	0f 90       	pop	r0
 184:	1f 90       	pop	r1
 186:	18 95       	reti

00000188 <__vector_9>:
ISR(TCA0_LCMP0_vect) //
{
 188:	1f 92       	push	r1
 18a:	0f 92       	push	r0
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	0f 92       	push	r0
 190:	11 24       	eor	r1, r1
 192:	8f 93       	push	r24
 194:	9f 93       	push	r25
 196:	ef 93       	push	r30
 198:	ff 93       	push	r31
//	TCA0.SPLIT.CTRLA = 0; //Disable
	//clear flag
	asm("break");
 19a:	98 95       	break
	cli();
 19c:	f8 94       	cli
	int intflags = TCA0.SPLIT.INTFLAGS;
 19e:	e0 e0       	ldi	r30, 0x00	; 0
 1a0:	fa e0       	ldi	r31, 0x0A	; 10
 1a2:	83 85       	ldd	r24, Z+11	; 0x0b
	TCA0.SPLIT.INTFLAGS=intflags;
 1a4:	83 87       	std	Z+11, r24	; 0x0b
	PORTD.OUT |= 0b00000111; //LEDs are off
 1a6:	e0 e6       	ldi	r30, 0x60	; 96
 1a8:	f4 e0       	ldi	r31, 0x04	; 4
 1aa:	84 81       	ldd	r24, Z+4	; 0x04
 1ac:	87 60       	ori	r24, 0x07	; 7
 1ae:	84 83       	std	Z+4, r24	; 0x04
	PORTD.OUTCLR= 0b00000011; //Tram & Pezoi LEDs are on		
 1b0:	83 e0       	ldi	r24, 0x03	; 3
 1b2:	86 83       	std	Z+6, r24	; 0x06
	while(TCA0.SPLIT.HCMP0)
 1b4:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <__TEXT_REGION_LENGTH__+0x7f4a29>
 1b8:	81 11       	cpse	r24, r1
 1ba:	fc cf       	rjmp	.-8      	; 0x1b4 <__vector_9+0x2c>
	{		
	}	
	tram=1;
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	80 93 02 28 	sts	0x2802, r24	; 0x802802 <tram>
 1c4:	90 93 03 28 	sts	0x2803, r25	; 0x802803 <tram+0x1>
	sei();
 1c8:	78 94       	sei
}
 1ca:	ff 91       	pop	r31
 1cc:	ef 91       	pop	r30
 1ce:	9f 91       	pop	r25
 1d0:	8f 91       	pop	r24
 1d2:	0f 90       	pop	r0
 1d4:	0f be       	out	0x3f, r0	; 63
 1d6:	0f 90       	pop	r0
 1d8:	1f 90       	pop	r1
 1da:	18 95       	reti

000001dc <_exit>:
 1dc:	f8 94       	cli

000001de <__stop_program>:
 1de:	ff cf       	rjmp	.-2      	; 0x1de <__stop_program>
